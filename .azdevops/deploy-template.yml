# This pipeline is the template for a deployment test given K8s and Docker
# verions 

parameters:
  dockerVersion: ''
  kubernetesVersion: ''
  displayName: ''
  queueName: ''

jobs:
- job:
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
  - group: 'Metrics Adapter'

  steps:
    # Print version details
  - script: |
      echo "This build uses the following versions:"
      echo "Kubernetes: ${{ parameters.kubernetesVersion }}"
      echo "Minikube: $(MINIKUBE_VERSION)"
      echo "Helm: $(HELM_VERSION)"
      echo "Docker: ${{ parameters.dockerVersion }}"
    displayName: 'Print version details'

    # Set up the Go workspace
    # Go workspace setup from https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/go?view=azure-devops
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(go) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'  
      cd $(modulePath) 
      go get -v -t -d ./... 
      if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      fi
    displayName: 'Set up the Go workspace'

    # Install docker
  - script: |
      chmod +x *.sh 
      ./install-docker.sh
    workingDirectory: '$(modulePath)/.azdevops/0_install'
    displayName: 'Install docker (must continue on error)'
    env: 
      DOCKER_VERSION: ${{ parameters.dockerVersion }}

    # Install everything else needed
  - script: |
      ./install-misc.sh
      ./install-crictl.sh
      ./install-minikube.sh
      ./install-helm.sh
    workingDirectory: '$(modulePath)/.azdevops/0_install'
    displayName: 'Install everything else'
    env: 
      KUBERNETES_VERSION: ${{ parameters.kubernetesVersion }}

    # Start the cluster, get go packages, install tiller, set up metrics server, gen the local values file
  - script: |
      chmod +x *.sh
      ./start-cluster.sh
      ./go-get.sh
      ./check-cluster.sh
      ./init-tiller.sh
      ./gen-values-file.sh
    workingDirectory: '$(modulePath)/.azdevops/1_setup'
    displayName: 'Cluster set up, Go get, prep for adapter deployment'
    env: 
      KUBERNETES_VERSION: ${{ parameters.kubernetesVersion }}
      VERSION: $(Build.TriggeredBy.BuildId)
  
    # Run hack/test-e2e.sh
  - script: |
      chmod +x *.sh
      ./run-e2e.sh
    workingDirectory: '$(modulePath)/hack'
    displayName: 'Run e2e test script (deploy adapter & test functionality)'
    failOnStderr: true
    env:
      SERVICEBUS_CONNECTION_STRING: $(SERVICEBUS_CONNECTION_STRING)
      SERVICEBUS_QUEUE_NAME: ${{ parameters.queueName }}
      SP_CLIENT_ID: $(SP_CLIENT_ID)
      SP_TENANT_ID: $(SP_TENANT_ID)
      SP_CLIENT_SECRET: $(SP_CLIENT_SECRET)
