# This pipeline tests the project and builds an image, which is pushed to a
# container registry for later use

trigger: 
- master
pr:
- master
variables:
- group: 'Metrics Adapter'
jobs:
- job:
  pool:
    vmImage: 'ubuntu-16.04'
  steps:

    # Set up the Go workspace
    # Go workspace setup from https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/go?view=azure-devops
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(go) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'  
      cd $(modulePath) 
      go get -v -t -d ./... 
      if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      fi
    displayName: 'Set up the Go workspace'
    
    # make build
  - script: 'make build'
    workingDirectory: '$(modulePath)'
    displayName: 'make build (Verify autogenerated scripts/Run tests/Build image)'
    env:
      VERSION: $(Build.BuildId)

    # docker push
  - script: 'make push'
    workingDirectory: '$(modulePath)'
    displayName: 'make push (docker push)'
    env:
      VERSION: $(Build.BuildId)
      DOCKER_PASS: $(DOCKER_PASS)
